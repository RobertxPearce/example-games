use Libraries.Interface.Events.CollisionListener2D
use Libraries.Interface.Events.CollisionEvent2D
use Libraries.Compute.Vector2
use Libraries.Containers.Array
use Libraries.Game.GameStateManager
use Libraries.Compute.Math


class Character is PairedItem2D

    number bulletVelocity = 150
    number speed = 400

    GameStateManager manager
    Math math

    on create
        SetName("Character")
        SetCollidable(true)
    end

    action GetBulletVelocity returns number
        return bulletVelocity
    end

    action SetBulletVelocity(number bulletVelocity)
        me:bulletVelocity = bulletVelocity
    end

    action GetCenterPosition returns Vector2
        Vector2 position
        position:Set(GetX() + GetWidth() / 2.0, GetY() + GetHeight() / 2.0)
        return position
    end

    blueprint action Fire(Main main)

    blueprint action Damage(Bullet bullet)

    blueprint action IsAlive returns boolean

    action GetSpeed returns number
        return speed
    end

    action SetSpeed(number speed)
        me:speed = speed
    end

    action GetCurrentRow returns integer
        Main main = cast(Main, manager:GetGame())
        number y = GetCenterPosition():GetY()
        Array<number> rowPositions = main:GetRowPositions()

        number minimumDistance = 2000
        integer result = 0
        integer i = 0
        repeat while i < rowPositions:GetSize()
            number distance = math:AbsoluteValue(y - rowPositions:Get(i))
            if distance < minimumDistance
                result = i
                minimumDistance = distance
            end 
            i = i + 1
        end

        return result
    end

end